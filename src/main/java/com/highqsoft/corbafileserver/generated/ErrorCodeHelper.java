package com.highqsoft.corbafileserver.generated;


/**
* com/highqsoft/corbafileserver/generated/ErrorCodeHelper.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from src/main/idl/corbafileserver.idl
* Donnerstag, 16. Juni 2016 10:30 Uhr MESZ
*/


/**
   * The error code.
   */
abstract public class ErrorCodeHelper
{
  private static String  _id = "IDL:com/highqsoft/corbafileserver/generated/ErrorCode:1.0";

  public static void insert (org.omg.CORBA.Any a, com.highqsoft.corbafileserver.generated.ErrorCode that)
  {
    org.omg.CORBA.portable.OutputStream out = a.create_output_stream ();
    a.type (type ());
    write (out, that);
    a.read_value (out.create_input_stream (), type ());
  }

  public static com.highqsoft.corbafileserver.generated.ErrorCode extract (org.omg.CORBA.Any a)
  {
    return read (a.create_input_stream ());
  }

  private static org.omg.CORBA.TypeCode __typeCode = null;
  synchronized public static org.omg.CORBA.TypeCode type ()
  {
    if (__typeCode == null)
    {
      __typeCode = org.omg.CORBA.ORB.init ().create_enum_tc (com.highqsoft.corbafileserver.generated.ErrorCodeHelper.id (), "ErrorCode", new String[] { "FILESERVER_ASAMODS_EXCEPTION", "FILESERVER_ACCESS_DENIED", "FILESERVER_FILE_NOT_FOUND", "FILESERVER_IO_EXCEPTION", "FILESERVER_INFORMATION", "FILESERVER_BAD_PARAMETER", "FILESERVER_MISSING_PARAMETER", "FILESERVER_CONNECT_FAILED", "FILESERVER_CONNECT_REFUSED", "FILESERVER_CONNECTION_LOST", "FILESERVER_IMPLEMENTATION_PROBLEM", "FILESERVER_NOT_IMPLEMENTED", "FILESERVER_NO_MEMORY", "FILESERVER_NULL_PARAMETER", "FILESERVER_NOT_FOUND"} );
    }
    return __typeCode;
  }

  public static String id ()
  {
    return _id;
  }

  public static com.highqsoft.corbafileserver.generated.ErrorCode read (org.omg.CORBA.portable.InputStream istream)
  {
    return com.highqsoft.corbafileserver.generated.ErrorCode.from_int (istream.read_long ());
  }

  public static void write (org.omg.CORBA.portable.OutputStream ostream, com.highqsoft.corbafileserver.generated.ErrorCode value)
  {
    ostream.write_long (value.value ());
  }

}
