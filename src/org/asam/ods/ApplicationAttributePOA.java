package org.asam.ods;


/**
 * Generated from IDL interface "ApplicationAttribute".
 *
 * @author JacORB IDL compiler V 2.3.0, 17-Feb-2007
 * @version generated at 28.09.2015 13:19:28
 */

public abstract class ApplicationAttributePOA
	extends org.omg.PortableServer.Servant
	implements org.omg.CORBA.portable.InvokeHandler, org.asam.ods.ApplicationAttributeOperations
{
	static private final java.util.Hashtable m_opsHash = new java.util.Hashtable();
	static
	{
		m_opsHash.put ( "setBaseAttribute", new java.lang.Integer(0));
		m_opsHash.put ( "setLength", new java.lang.Integer(1));
		m_opsHash.put ( "getName", new java.lang.Integer(2));
		m_opsHash.put ( "setRights", new java.lang.Integer(3));
		m_opsHash.put ( "setUnit", new java.lang.Integer(4));
		m_opsHash.put ( "isUnique", new java.lang.Integer(5));
		m_opsHash.put ( "hasUnit", new java.lang.Integer(6));
		m_opsHash.put ( "setIsUnique", new java.lang.Integer(7));
		m_opsHash.put ( "getApplicationElement", new java.lang.Integer(8));
		m_opsHash.put ( "getBaseAttribute", new java.lang.Integer(9));
		m_opsHash.put ( "withValueFlag", new java.lang.Integer(10));
		m_opsHash.put ( "isObligatory", new java.lang.Integer(11));
		m_opsHash.put ( "getLength", new java.lang.Integer(12));
		m_opsHash.put ( "getRights", new java.lang.Integer(13));
		m_opsHash.put ( "hasValueFlag", new java.lang.Integer(14));
		m_opsHash.put ( "setName", new java.lang.Integer(15));
		m_opsHash.put ( "getEnumerationDefinition", new java.lang.Integer(16));
		m_opsHash.put ( "getDataType", new java.lang.Integer(17));
		m_opsHash.put ( "isAutogenerated", new java.lang.Integer(18));
		m_opsHash.put ( "getUnit", new java.lang.Integer(19));
		m_opsHash.put ( "withUnit", new java.lang.Integer(20));
		m_opsHash.put ( "setDataType", new java.lang.Integer(21));
		m_opsHash.put ( "setEnumerationDefinition", new java.lang.Integer(22));
		m_opsHash.put ( "setIsAutogenerated", new java.lang.Integer(23));
		m_opsHash.put ( "setIsObligatory", new java.lang.Integer(24));
	}
	private String[] ids = {"IDL:org/asam/ods/ApplicationAttribute:1.0"};
	public org.asam.ods.ApplicationAttribute _this()
	{
		return org.asam.ods.ApplicationAttributeHelper.narrow(_this_object());
	}
	public org.asam.ods.ApplicationAttribute _this(org.omg.CORBA.ORB orb)
	{
		return org.asam.ods.ApplicationAttributeHelper.narrow(_this_object(orb));
	}
	public org.omg.CORBA.portable.OutputStream _invoke(String method, org.omg.CORBA.portable.InputStream _input, org.omg.CORBA.portable.ResponseHandler handler)
		throws org.omg.CORBA.SystemException
	{
		org.omg.CORBA.portable.OutputStream _out = null;
		// do something
		// quick lookup of operation
		java.lang.Integer opsIndex = (java.lang.Integer)m_opsHash.get ( method );
		if ( null == opsIndex )
			throw new org.omg.CORBA.BAD_OPERATION(method + " not found");
		switch ( opsIndex.intValue() )
		{
			case 0: // setBaseAttribute
			{
			try
			{
				org.asam.ods.BaseAttribute _arg0=org.asam.ods.BaseAttributeHelper.read(_input);
				_out = handler.createReply();
				setBaseAttribute(_arg0);
			}
			catch(org.asam.ods.AoException _ex0)
			{
				_out = handler.createExceptionReply();
				org.asam.ods.AoExceptionHelper.write(_out, _ex0);
			}
				break;
			}
			case 1: // setLength
			{
			try
			{
				int _arg0=_input.read_long();
				_out = handler.createReply();
				setLength(_arg0);
			}
			catch(org.asam.ods.AoException _ex0)
			{
				_out = handler.createExceptionReply();
				org.asam.ods.AoExceptionHelper.write(_out, _ex0);
			}
				break;
			}
			case 2: // getName
			{
			try
			{
				_out = handler.createReply();
				_out.write_string(getName());
			}
			catch(org.asam.ods.AoException _ex0)
			{
				_out = handler.createExceptionReply();
				org.asam.ods.AoExceptionHelper.write(_out, _ex0);
			}
				break;
			}
			case 3: // setRights
			{
			try
			{
				org.asam.ods.InstanceElement _arg0=org.asam.ods.InstanceElementHelper.read(_input);
				int _arg1=_input.read_long();
				org.asam.ods.RightsSet _arg2=org.asam.ods.RightsSetHelper.read(_input);
				_out = handler.createReply();
				setRights(_arg0,_arg1,_arg2);
			}
			catch(org.asam.ods.AoException _ex0)
			{
				_out = handler.createExceptionReply();
				org.asam.ods.AoExceptionHelper.write(_out, _ex0);
			}
				break;
			}
			case 4: // setUnit
			{
			try
			{
				org.asam.ods.T_LONGLONG _arg0=org.asam.ods.T_LONGLONGHelper.read(_input);
				_out = handler.createReply();
				setUnit(_arg0);
			}
			catch(org.asam.ods.AoException _ex0)
			{
				_out = handler.createExceptionReply();
				org.asam.ods.AoExceptionHelper.write(_out, _ex0);
			}
				break;
			}
			case 5: // isUnique
			{
			try
			{
				_out = handler.createReply();
				_out.write_boolean(isUnique());
			}
			catch(org.asam.ods.AoException _ex0)
			{
				_out = handler.createExceptionReply();
				org.asam.ods.AoExceptionHelper.write(_out, _ex0);
			}
				break;
			}
			case 6: // hasUnit
			{
			try
			{
				_out = handler.createReply();
				_out.write_boolean(hasUnit());
			}
			catch(org.asam.ods.AoException _ex0)
			{
				_out = handler.createExceptionReply();
				org.asam.ods.AoExceptionHelper.write(_out, _ex0);
			}
				break;
			}
			case 7: // setIsUnique
			{
			try
			{
				boolean _arg0=_input.read_boolean();
				_out = handler.createReply();
				setIsUnique(_arg0);
			}
			catch(org.asam.ods.AoException _ex0)
			{
				_out = handler.createExceptionReply();
				org.asam.ods.AoExceptionHelper.write(_out, _ex0);
			}
				break;
			}
			case 8: // getApplicationElement
			{
			try
			{
				_out = handler.createReply();
				org.asam.ods.ApplicationElementHelper.write(_out,getApplicationElement());
			}
			catch(org.asam.ods.AoException _ex0)
			{
				_out = handler.createExceptionReply();
				org.asam.ods.AoExceptionHelper.write(_out, _ex0);
			}
				break;
			}
			case 9: // getBaseAttribute
			{
			try
			{
				_out = handler.createReply();
				org.asam.ods.BaseAttributeHelper.write(_out,getBaseAttribute());
			}
			catch(org.asam.ods.AoException _ex0)
			{
				_out = handler.createExceptionReply();
				org.asam.ods.AoExceptionHelper.write(_out, _ex0);
			}
				break;
			}
			case 10: // withValueFlag
			{
			try
			{
				boolean _arg0=_input.read_boolean();
				_out = handler.createReply();
				withValueFlag(_arg0);
			}
			catch(org.asam.ods.AoException _ex0)
			{
				_out = handler.createExceptionReply();
				org.asam.ods.AoExceptionHelper.write(_out, _ex0);
			}
				break;
			}
			case 11: // isObligatory
			{
			try
			{
				_out = handler.createReply();
				_out.write_boolean(isObligatory());
			}
			catch(org.asam.ods.AoException _ex0)
			{
				_out = handler.createExceptionReply();
				org.asam.ods.AoExceptionHelper.write(_out, _ex0);
			}
				break;
			}
			case 12: // getLength
			{
			try
			{
				_out = handler.createReply();
				_out.write_long(getLength());
			}
			catch(org.asam.ods.AoException _ex0)
			{
				_out = handler.createExceptionReply();
				org.asam.ods.AoExceptionHelper.write(_out, _ex0);
			}
				break;
			}
			case 13: // getRights
			{
			try
			{
				_out = handler.createReply();
				org.asam.ods.ACLSequenceHelper.write(_out,getRights());
			}
			catch(org.asam.ods.AoException _ex0)
			{
				_out = handler.createExceptionReply();
				org.asam.ods.AoExceptionHelper.write(_out, _ex0);
			}
				break;
			}
			case 14: // hasValueFlag
			{
			try
			{
				_out = handler.createReply();
				_out.write_boolean(hasValueFlag());
			}
			catch(org.asam.ods.AoException _ex0)
			{
				_out = handler.createExceptionReply();
				org.asam.ods.AoExceptionHelper.write(_out, _ex0);
			}
				break;
			}
			case 15: // setName
			{
			try
			{
				java.lang.String _arg0=_input.read_string();
				_out = handler.createReply();
				setName(_arg0);
			}
			catch(org.asam.ods.AoException _ex0)
			{
				_out = handler.createExceptionReply();
				org.asam.ods.AoExceptionHelper.write(_out, _ex0);
			}
				break;
			}
			case 16: // getEnumerationDefinition
			{
			try
			{
				_out = handler.createReply();
				org.asam.ods.EnumerationDefinitionHelper.write(_out,getEnumerationDefinition());
			}
			catch(org.asam.ods.AoException _ex0)
			{
				_out = handler.createExceptionReply();
				org.asam.ods.AoExceptionHelper.write(_out, _ex0);
			}
				break;
			}
			case 17: // getDataType
			{
			try
			{
				_out = handler.createReply();
				org.asam.ods.DataTypeHelper.write(_out,getDataType());
			}
			catch(org.asam.ods.AoException _ex0)
			{
				_out = handler.createExceptionReply();
				org.asam.ods.AoExceptionHelper.write(_out, _ex0);
			}
				break;
			}
			case 18: // isAutogenerated
			{
			try
			{
				_out = handler.createReply();
				_out.write_boolean(isAutogenerated());
			}
			catch(org.asam.ods.AoException _ex0)
			{
				_out = handler.createExceptionReply();
				org.asam.ods.AoExceptionHelper.write(_out, _ex0);
			}
				break;
			}
			case 19: // getUnit
			{
			try
			{
				_out = handler.createReply();
				org.asam.ods.T_LONGLONGHelper.write(_out,getUnit());
			}
			catch(org.asam.ods.AoException _ex0)
			{
				_out = handler.createExceptionReply();
				org.asam.ods.AoExceptionHelper.write(_out, _ex0);
			}
				break;
			}
			case 20: // withUnit
			{
			try
			{
				boolean _arg0=_input.read_boolean();
				_out = handler.createReply();
				withUnit(_arg0);
			}
			catch(org.asam.ods.AoException _ex0)
			{
				_out = handler.createExceptionReply();
				org.asam.ods.AoExceptionHelper.write(_out, _ex0);
			}
				break;
			}
			case 21: // setDataType
			{
			try
			{
				org.asam.ods.DataType _arg0=org.asam.ods.DataTypeHelper.read(_input);
				_out = handler.createReply();
				setDataType(_arg0);
			}
			catch(org.asam.ods.AoException _ex0)
			{
				_out = handler.createExceptionReply();
				org.asam.ods.AoExceptionHelper.write(_out, _ex0);
			}
				break;
			}
			case 22: // setEnumerationDefinition
			{
			try
			{
				org.asam.ods.EnumerationDefinition _arg0=org.asam.ods.EnumerationDefinitionHelper.read(_input);
				_out = handler.createReply();
				setEnumerationDefinition(_arg0);
			}
			catch(org.asam.ods.AoException _ex0)
			{
				_out = handler.createExceptionReply();
				org.asam.ods.AoExceptionHelper.write(_out, _ex0);
			}
				break;
			}
			case 23: // setIsAutogenerated
			{
			try
			{
				boolean _arg0=_input.read_boolean();
				_out = handler.createReply();
				setIsAutogenerated(_arg0);
			}
			catch(org.asam.ods.AoException _ex0)
			{
				_out = handler.createExceptionReply();
				org.asam.ods.AoExceptionHelper.write(_out, _ex0);
			}
				break;
			}
			case 24: // setIsObligatory
			{
			try
			{
				boolean _arg0=_input.read_boolean();
				_out = handler.createReply();
				setIsObligatory(_arg0);
			}
			catch(org.asam.ods.AoException _ex0)
			{
				_out = handler.createExceptionReply();
				org.asam.ods.AoExceptionHelper.write(_out, _ex0);
			}
				break;
			}
		}
		return _out;
	}

	public String[] _all_interfaces(org.omg.PortableServer.POA poa, byte[] obj_id)
	{
		return ids;
	}
}
